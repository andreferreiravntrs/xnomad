@import '../../marketplace.css';

:root {
  /*
    These variables are available in global scope through ":root"
    element (<html> tag). Variables with the same names are going to
    overwrite each other if CSS Properties' (PostCSS plugin)
    configuration "preserve: true" is used - meaning that variables
    are left to CSS bundle. We are planning to enable it in the future
    since browsers support CSS Properties already.
 */

  --SectionHero_desktopTitleMaxWidth: 625px;

  --SectionHero_animation: {
    animation-name: animationTitle;
    animation-duration: 0.5s;
    animation-timing-function: ease-out;
    -webkit-animation-fill-mode: forwards;

    visibility: hidden;
    opacity: 1;
    position: relative;
    border: 0;
  }
}

/* Animation for the hero elements */

@keyframes animationTitle {
  0% {
    visibility: hidden;
    opacity: 0;
    top: -20px;
  }
  100% {
    visibility: visible;
    opacity: 1;
    top: 0;
  }
}

.root {
  @apply --backgroundImage;
  display: flex;
  flex-direction: column;
  width: 100%;
  height: 100%;
  border-radius: 0;
  border: 0;

  /* Text positioning is done with paddings */
}

.heroContent {
  margin: 0 24px 0 24px;
  display: inline-block;
  padding: 0 36px;

  /* Special viewport for adjusting the heroContent's placement */

  @media only screen and (min-width: 1025px) and (max-width: 1366px) {
    margin: 0 auto;
    max-width: 980px;
    padding: 0 36px 0 36px;
  }

  @media only screen and (min-width: 1367px) {
    margin: 0 auto;
    max-width: calc(1052px + 36px + 36px);
    padding: 0 36px 0 36px;
  }
}

.heroMainTitle {
  @apply --H1FontStyles;
  color: var(--matterColorLight);
  margin-bottom: 32px;
  margin-left: auto;
  margin-right: auto;
  text-align: center;
  max-width: 800px;

  @apply --SectionHero_animation;
  animation-delay: 0.5s;
}

.heroSearchArea {
  display: flex;
  flex-direction: row;
  justify-content: center;
  align-items: stretch;
}

.heroButton {
  @apply --marketplaceButtonStylesPrimary;
  width: auto;
  min-height: auto;
}

.selectsArea {
  display: none;
  flex-direction: row;
  border: 1px solid var(--matterColorGreyLight);
  background-color: var(--matterColorLight);

  @media (--viewportMedium) {
    display: flex;
  }
}

.verticalDivider {
  height: 100%;
  width: 1px;
  background-color: var(--matterColorGreyLight)
}

.searchBar {
  background-color: white;
  border-radius: 4px;
  padding: 10px 15px;

  & * {
    height: auto;
  }

  & .desktopIcon {
    background: none;
  }
  & input ~ div {
    top: 13px;
  }
}
