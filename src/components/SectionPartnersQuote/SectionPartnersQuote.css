@import '../../marketplace.css';

:root {
  /*
    These variables are available in global scope through ":root"
    element (<html> tag). Variables with the same names are going to
    overwrite each other if CSS Properties' (PostCSS plugin)
    configuration "preserve: true" is used - meaning that variables
    are left to CSS bundle. We are planning to enable it in the future
    since browsers support CSS Properties already.
 */
}

.root {
  display: flex;
  flex-direction: column;
  width: 100%;
  height: 100%;
  border-radius: 0;
  border: 0;
  background-color: var(--matterColorBeige);
  margin-bottom: calc(5 * var(--spacingUnitDesktop));
}

.container {
  padding-top: calc(3 * var(--spacingUnit)) !important;
  padding-bottom: calc(3 * var(--spacingUnit)) !important;
  margin-top: 0 !important;
  margin-bottom: 0 !important;
}

.row {
  display: flex;
  flex-direction: row;
  align-items: center;
  justify-content: center;
  flex-wrap: wrap;
}

.quote {
  @apply --H1FontStyles;
  margin: 70px auto;
  width: 66.66666%;
  text-align: center;
  font-size: 45px;
  line-height: 54px;
  color: var(--matterColorBrown);
}

.label {
  @apply --H6FontStyles;
  flex-basis: 100%;
  padding: calc(4 * var(--spacingUnit));
  text-align: center;
  color: var(--very-dark-grayish-orange);

  @media (--viewportLarge) {
    flex-basis: auto;
  }

  @media (--viewportLargeWithPaddings) {
    flex-basis: auto;
  }
}

.partnerLogo {
  margin: calc(3 * var(--spacingUnit));
  flex-basis: calc(50% - 36px);
  max-height: 70px;

  @media (--viewportMedium) {
    margin: calc(4 * var(--spacingUnit));
    flex-basis: auto;
  }
}
